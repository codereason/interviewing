class Solution(object):
    def candyCrush(self, board):
        """
        :type board: List[List[int]]
        :rtype: List[List[int]]
        """
        R, C = len(board), len(board[0])
        changed = True

        while changed:
            changed = False

            for r in xrange(R):
                for c in xrange(C-2):
                    if abs(board[r][c]) == abs(board[r][c+1]) == abs(board[r][c+2]) != 0:
                        board[r][c] = board[r][c+1] = board[r][c+2] = -abs(board[r][c])
                        changed = True

            for r in xrange(R-2):
                for c in xrange(C):
                    if abs(board[r][c]) == abs(board[r+1][c]) == abs(board[r+2][c]) != 0:
                        board[r][c] = board[r+1][c] = board[r+2][c] = -abs(board[r][c])
                        changed = True

            for c in xrange(C):
                i = R-1
                for r in reversed(xrange(R)):
                    if board[r][c] > 0:
                        board[i][c] = board[r][c]
                        i -= 1
                for r in reversed(xrange(i+1)):
                    board[r][c] = 0

        return board

import sys
kkk = []
cov = []
try:

    while True:
        line = sys.stdin.readline().strip()
        if line == '':
            break

        a = list(map(int, line.split(' ')))
        kkk.append(a)

except:
    pass
def f2(board):
    w ,h = len(board),len(board[0])
    stop = False
    while not stop:
        # print(stop)
        stop=True
        for x in range(w):
            y = z = 0
            while y<h:
                z = y+1
                while z<h and board[x][z] and abs(board[x][z])==abs(board[x][y]):
                    z+=1
                if z - y >2:
                    stop = False
                    while y < z:
                        board[x][y] = -abs(board[x][y])
                        # print(board)
                        y+=1
                y = z
        # print(board)
        for y in range(h):
            x = z = 0
            while x<w:
                z = x+1
                while z < w and board[z][y] and abs(board[z][y]) == abs(board[x][y]):
                    z+=1
                if z-x > 2:
                    stop = False
                    while x<z:
                        board[x][y] = - abs(board[x][y])
                        x+=1
                x = z
        for y in range(h):
            x =z = w-1
            while z >= 0:
                if board[z][y]>0:
                    board[x][y]=board[z][y]
                    x-=1
                z-=1
            while x>=0:
                board[x][y] = 0
                x -=1
    return board

aaa = f2(kkk)
count = 0
for i in range(len(aaa)):
    for j in range(len(aaa[0])):
        if aaa[i][j]!=0:
            count+=1
print(count)
# print(f2(kkk))
# if __name__ == '__main__':
#     bbb = [[110, 5, 112, 113, 114], [210, 211, 5, 213, 214], [310, 311, 3, 313, 314], [410, 411, 412, 5, 414],
#            [5, 1, 512, 3, 3], [610, 4, 1, 613, 614], [710, 1, 2, 713, 714], [810, 1, 2, 1, 1], [1, 2, 1, 2, 2],
#            [4, 1, 4, 4, 1014]]
#     '''
#     3 1 2 1 1
# 1 1 1 1 3
# 1 1 1 1 1
# 1 1 1 1 1
# 3 1 2 2 2
#     '''
#     bbb = [[3,1,2,1,1],[1,1,1,1,3],[1,1,1,1,1],[1,1,1,1,1],[3,1,2,2,2]]
#     s = Solution()
#     print(s.candyCrush(bbb))
#     print(f2(bbb))
