'''
274. H 指数
给你一个整数数组 citations ，其中 citations[i] 表示研究者的第 i 篇论文被引用的次数。计算并返回该研究者的 h 指数。

h 指数的定义：h 代表“高引用次数”（high citations），一名科研人员的 h 指数是指他（她）的 （n 篇论文中）总共有 h 篇论文分别被引用了至少 h 次。且其余的 n - h 篇论文每篇被引用次数 不超过 h 次。

例如：某人的 h 指数是 20，这表示他已发表的论文中，每篇被引用了至少 20 次的论文总共有 20 篇。

提示：如果 h 有多种可能的值，h 指数 是其中最大的那个。

 

示例 1：

输入：citations = [3,0,6,1,5]
输出：3 
解释：给定数组表示研究者总共有 5 篇论文，每篇论文相应的被引用了 3, 0, 6, 1, 5 次。
     由于研究者有 3 篇论文每篇 至少 被引用了 3 次，其余两篇论文每篇被引用 不多于 3 次，所以她的 h 指数是 3。
示例 2：

输入：citations = [1,3,1]
输出：1
 

提示：

n == citations.length
1 <= n <= 5000
0 <= citations[i] <= 1000
'''
# 排序后，从大到小遍历，当当前h值小于其被引用数时，h++；当当前h值大于等于其被引用数时，return。


class Solution(object):
    def hIndex(self, citations):
        """
        :type citations: List[int]
        :rtype: int
        """
        res = 0
        if len(citations) == 1:
            return min(1,citations[0])
        if len(citations) == 0:return 0
        citations.sort(reverse=True)
        for i in range(0, len(citations)):
        l, 
            if citations[i] <= i :         
                res = i
                break
        return res
  
    def hindex(self, citations):
        #超时解法
        res = 0 #
        max = 0
        citations.sort(reverse=True)
        while res<= len(citations):
            flag1, flag2 = True,True
            left = citations[:res]
            right = citations[res:]
            print(left,right)
            #二分查找 left[i] >=res  right[i] <= res 找到了就设置对应的flag为False
            for i in range(len(left)):
                if left[i] >=res:
                    pass
                else:
                    flag1 = False
                    break
            for i in range(len(right)):
                if right[i] <= res:
                    pass
                else:
                    flag2 = False
                    break
            print(flag1,flag2)
            if  flag1 and flag2:
                if max < res:
                    max = res
            res += 1
        return max



if __name__ == "__main__":
    so = Solution()
    print(so.hindex([11,23]))
    print(so.hIndex([11,23]))